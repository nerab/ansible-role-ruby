- name: Install prerequisite software
  apt:
    update_cache: yes
    name:
      - build-essential
      - libyaml-dev
      - libssl-dev
      - libffi-dev
      - libreadline-dev
      - autoconf
    state: present
  tags: apt,ruby

- name: Check if ruby is present
  shell: test -x /usr/local/bin/ruby
  when: ansible_system == "Linux"
  ignore_errors: yes
  register: ruby_present
  tags: ruby

- name: Download Ruby tarball
  get_url:
    url="https://cache.ruby-lang.org/pub/ruby/{{ ruby_version.major }}.{{ ruby_version.minor }}/{{ ruby_version.full }}.tar.gz"
    dest="/tmp/{{ ruby_version.full }}.tar.gz"
  when: ruby_present|failed
  tags: ruby

- name: Unpack Ruby tarball
  unarchive:
    src: "/tmp/{{ ruby_version.full }}.tar.gz"
    dest: "/usr/local/src"
    remote_src: yes
  when: ruby_present|failed
  tags: ruby

- name: Configure Ruby
  command: |
          ./configure
          --enable-shared
          --disable-install-doc
          --disable-install-rdoc
          --disable-install-capi
  args:
    chdir: /usr/local/src/{{ ruby_version.full }}
  when: ruby_present|failed
  tags: ruby

- name: Build Ruby
  command: make
  args:
    chdir: /usr/local/src/{{ ruby_version.full }}
  when: ruby_present|failed
  tags: ruby

- name: Install Ruby
  command: make install
  args:
    chdir: /usr/local/src/{{ ruby_version.full }}
  become: yes
  when: ruby_present|failed
  tags: ruby

- name: Install latest bundler gem
  gem:
    name: bundler
    user_install: no
    state: latest
  tags: ruby,gem,bundler

- name: Set global gem options
  copy:
    src: etc/gemrc
    dest: /etc/gemrc
    owner: root
    group: root
    mode: 0644
  tags: ruby,gem

- name: Add gem user_dir to PATH
  copy:
    src: etc/profile.d/gem-user_dir-path.sh
    dest: /etc/profile.d/gem-user_dir-path.sh
    owner: root
    group: root
    mode: 0644
  tags: ruby,gem
